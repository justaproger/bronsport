# --- START OF FULL FILE .env (Пример для Продакшена) ---
# Django Core Settings
DJANGO_SECRET_KEY="@qwerty!123"
DJANGO_DEBUG=False
DJANGO_ALLOWED_HOSTS="bronsport.uz,www.bronsport.uz,api.bronsport.uz" # Основные домены
# Если QR-сканер будет на отдельном домене и обслуживаться Django (маловероятно для фронта):
# DJANGO_ALLOWED_HOSTS="bronsport.uz,www.bronsport.uz,api.bronsport.uz,qr.bronsport.uz"

# Database (PostgreSQL) Settings
DB_ENGINE="django.db.backends.postgresql"
DB_NAME="bronsportdb_prod"
DB_USER="bronsportuser_prod"
DB_PASSWORD="@qwerty!123"
DB_HOST="localhost" # Или IP/хост вашего сервера PostgreSQL, если он отдельно
DB_PORT="5432"

# Email (SMTP) Settings - Пример для Gmail
# Для другого SMTP-провайдера измените EMAIL_HOST, EMAIL_PORT, EMAIL_USE_TLS/SSL
DJANGO_EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST="smtp.gmail.com"
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False
EMAIL_HOST_USER="main.teamx@gmail.com" # Ваш Gmail адрес для отправки
EMAIL_HOST_PASSWORD="20052025teamx@" # Пароль приложения Google
DEFAULT_FROM_EMAIL="Bronsport <main.teamx@gmail.com>" # Email отправителя по умолчанию
ADMIN_EMAIL_RECEIVER="main.teamx@example.com" # Куда Django будет слать ошибки 500
# DJANGO_ADMINS="Admin Name:your_admin_email@example.com,Another Admin:another@example.com" # Альтернативно для ADMINS

# Frontend URL
FRONTEND_URL="https://bronsport.uz"
# QR_SCANNER_FRONTEND_URL="https://qr.bronsport.uz" # Если фронтенд QR-сканера на отдельном домене

# Paycom Settings
# Ключи для авторизации ВЕБХУКОВ от Paycom (когда Paycom стучится к НАМ)
PAYME_WEBHOOK_LOGIN="Paycom" # Статичный логин, если так подтвердил Payme
PAYME_WEBHOOK_PRODUCTION_KEY="ВАШ_БОЕВОЙ_СЕКРЕТНЫЙ_КЛЮЧ_PAYME_ДЛЯ_WEBHOOKS_ОТ_КАЖДОЙ_КАССЫ_УНИВЕРА" 
# ВАЖНО: Если у каждого университета свой ключ для вебхука, эта переменная не используется напрямую.
# Ключ будет браться из модели University. Эта переменная может быть для "мастер" кассы, если она есть.
# Если ключ один для всех вебхуков от Payme к вашему мерчант-аккаунту, то используйте его.

# URL для генерации ссылки на Payme Checkout (куда мы отправляем пользователя)
PAYCOM_CHECKOUT_URL="https://checkout.paycom.uz" # Боевой URL

# Настройки для библиотеки payme-pkg (эти значения используются самой библиотекой)
# PAYME_ID - не нужен глобально, если у каждого университета своя касса и мы берем из модели University
# PAYME_KEY - не нужен глобально для вебхуков, если у каждого университета свой ключ и свой URL вебхука со slug

# Логирование
DJANGO_LOG_LEVEL="INFO" # Уровень логирования для Django (INFO, WARNING, ERROR)

# Другие возможные настройки
# CELERY_BROKER_URL="redis://localhost:6379/0" # Если используете Celery с Redis
# CELERY_RESULT_BACKEND="redis://localhost:6379/0"
# --- END OF FULL FILE .env ---